{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyg/Desktop/job_app/client/src/components/JobForm.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ValidatorError } from './ValidatorError';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const JobForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [state, setState] = useState({\n    formData: {\n      company: {\n        name: 'company',\n        value: '',\n        error: false\n      },\n      position: {\n        name: 'position',\n        value: '',\n        error: false\n      },\n      link: {\n        name: 'link',\n        value: '',\n        error: false\n      },\n      notes: {\n        name: 'notes',\n        value: '',\n        error: false\n      },\n      status: 'applied',\n      starred: false\n    }\n  });\n  const changeHandler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setState({\n      ...state,\n      formData: {\n        ...state.formData,\n        [name]: {\n          value: value,\n          error: formValidation(name)\n        }\n      }\n    });\n  };\n  const submitHandler = e => {\n    e.preventDefault();\n    const {\n      company,\n      position,\n      link,\n      notes,\n      status,\n      starred\n    } = state.formData;\n    const fields = [company, position, link, notes];\n    const body = {\n      starred: starred,\n      status: status\n    };\n    fields.forEach((field, i) => {\n      console.log(field, i);\n      if (field.error) body[field] = field.value;\n    });\n    console.log(body);\n    // axios.post('http://localhost:8000/api/jobs/', state.formData)\n    //     .then((res)=>{\n    //         if(res.data.err){\n    //             console.log(res.data.err)\n    //         } else {\n    //             navigate('/');\n    //         }\n    //     })\n    //     .catch((err) => {console.log(err.message)})\n  };\n\n  const formValidation = name => {\n    const linkRegex = /((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/;\n    switch (name) {\n      case 'company':\n        if (state.formData.company.value.length < 1) return true;\n        break;\n      case 'position':\n        if (state.formData.position.value.length < 1) return true;\n        break;\n      case 'link':\n        if (state.formData.link.value.length < 3) return true;\n        if (!linkRegex.test(state.formData.link.value)) return true;\n        break;\n      case 'notes':\n        if (state.formData.notes.value.length > 250) return true;\n        break;\n      default:\n        break;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-5 px-5\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => submitHandler(e, state),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"position\",\n          className: \"form-label\",\n          children: \"Job Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: state.formData.position.value,\n          name: \"position\",\n          type: \"text\",\n          className: \"form-control\",\n          id: \"position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), state.formData.position.error && /*#__PURE__*/_jsxDEV(ValidatorError, {\n          message: \"Please Enter a Job Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"company\",\n          className: \"form-label\",\n          children: \"Company Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: state.formData.company.value,\n          name: \"company\",\n          type: \"text\",\n          className: \"form-control\",\n          id: \"company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), state.formData.company.error && /*#__PURE__*/_jsxDEV(ValidatorError, {\n          message: \"Please Enter a Company Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"link\",\n          className: \"form-label\",\n          children: [\"Link to Job Posting \", /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: \"(Copy/Paste for best results)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 68\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: changeHandler,\n          value: state.formData.link.value,\n          name: \"link\",\n          type: \"text\",\n          className: \"form-control\",\n          id: \"link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), state.formData.link.error && /*#__PURE__*/_jsxDEV(ValidatorError, {\n          message: \"Please Use a Valid Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"notes\",\n          className: \"form-label\",\n          children: \"Additional Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: changeHandler,\n          value: state.formData.notes.value,\n          name: \"notes\",\n          className: \"form-control\",\n          id: \"notes\",\n          maxLength: \"250\",\n          rows: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [state.formData.notes.value.length, \"/250\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), state.formData.notes.error && /*#__PURE__*/_jsxDEV(ValidatorError, {\n          message: \"Notes Must Be Less Than 250 Characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(JobForm, \"gZ8EiqELGk86qMJ3Uiq+uy9Ql2s=\", false, function () {\n  return [useNavigate];\n});\n_c = JobForm;\nvar _c;\n$RefreshReg$(_c, \"JobForm\");","map":{"version":3,"names":["axios","React","useState","useNavigate","ValidatorError","JobForm","navigate","state","setState","formData","company","name","value","error","position","link","notes","status","starred","changeHandler","e","target","formValidation","submitHandler","preventDefault","fields","body","forEach","field","i","console","log","linkRegex","length","test"],"sources":["/Users/anthonyg/Desktop/job_app/client/src/components/JobForm.jsx"],"sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { ValidatorError } from './ValidatorError';\n\nexport const JobForm = () => {\n    const navigate = useNavigate();\n    const [state,setState] = useState({\n        formData: {\n            company: {name: 'company', value:'', error: false},\n            position: {name: 'position', value:'', error: false},\n            link: {name: 'link', value:'', error: false},\n            notes: {name: 'notes', value:'', error: false},\n            status: 'applied',\n            starred: false\n        }\n    })\n\n    const changeHandler = (e) => {\n        const {name, value} = e.target;\n        setState({...state, \n            formData: {...state.formData, \n                [name]: {value: value, error: formValidation(name)}\n            }\n        })\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        const {company,position,link,notes,status,starred} = state.formData;\n        const fields = [company,position,link,notes]\n        const body = {starred: starred, status: status};\n        fields.forEach((field, i )=>{\n            console.log(field, i)\n            if (field.error) body[field] = field.value\n        })\n        console.log(body)\n        // axios.post('http://localhost:8000/api/jobs/', state.formData)\n        //     .then((res)=>{\n        //         if(res.data.err){\n        //             console.log(res.data.err)\n        //         } else {\n        //             navigate('/');\n        //         }\n        //     })\n        //     .catch((err) => {console.log(err.message)})\n    }\n\n    const formValidation = (name) => {\n        const linkRegex = /((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/;\n        switch (name) {\n            case 'company':\n                if (state.formData.company.value.length < 1) return true;\n                break;\n            case 'position':\n                if (state.formData.position.value.length < 1) return true;\n                break;\n            case 'link':\n                if (state.formData.link.value.length < 3) return true;\n                if (!linkRegex.test(state.formData.link.value)) return true;\n                break;\n            case 'notes':\n                if (state.formData.notes.value.length > 250) return true;\n                break;\n            default:\n                break;\n        }\n        return false\n    }\n\n    return (\n        <div className='mx-5 px-5'>\n            <form onSubmit={(e) => submitHandler(e,state)}>\n                <div className=\"mb-3\">\n                    <label \n                        htmlFor=\"position\" \n                        className=\"form-label\">Job Title</label>\n                    <input\n                        onChange={changeHandler} \n                        value={state.formData.position.value} \n                        name=\"position\" type=\"text\" \n                        className=\"form-control\" \n                        id=\"position\"/>\n                    {state.formData.position.error && (<ValidatorError message='Please Enter a Job Title'/>)}\n                </div>\n                <div className=\"mb-3\">\n                    <label \n                        htmlFor=\"company\" \n                        className=\"form-label\">Company Name</label>\n                    <input \n                        onChange={changeHandler} \n                        value={state.formData.company.value} \n                        name=\"company\" \n                        type=\"text\" \n                        className=\"form-control\" \n                        id=\"company\"/>\n                    {state.formData.company.error && (<ValidatorError message='Please Enter a Company Name'/>)}\n                </div>\n                <div className=\"mb-3\">\n                    <label \n                        htmlFor=\"link\" \n                        className=\"form-label\">Link to Job Posting <small className='text-muted'>(Copy/Paste for best results)</small></label>\n                    <input \n                        onChange={changeHandler} \n                        value={state.formData.link.value} \n                        name=\"link\" \n                        type='text' \n                        className=\"form-control\" \n                        id=\"link\"/>\n                    {state.formData.link.error && (<ValidatorError message='Please Use a Valid Link'/>)}\n                </div>\n                <div className=\"mb-3\">\n                    <label \n                        htmlFor=\"notes\" \n                        className=\"form-label\">Additional Notes</label>\n                    <textarea \n                        onChange={changeHandler} \n                        value={state.formData.notes.value} \n                        name=\"notes\" \n                        className=\"form-control\" \n                        id=\"notes\" \n                        maxLength='250' \n                        rows='3'/>\n                    <small>{state.formData.notes.value.length}/250</small>\n                    {state.formData.notes.error && (<ValidatorError message='Notes Must Be Less Than 250 Characters'/>)}\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}